{
  "contractName": "IRelayRecipient",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "forwarder",
          "type": "address"
        }
      ],
      "name": "isTrustedForwarder",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "versionRecipient",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"}],\"name\":\"isTrustedForwarder\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"versionRecipient\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"isTrustedForwarder(address)\":{\"notice\":\"return if the forwarder is trusted to forward relayed transactions to us. the forwarder is required to verify the sender's signature, and verify the call is not a replay.\"}},\"notice\":\"a contract must implement this interface in order to support relayed transaction. It is better to inherit the BaseRelayRecipient as its implementation.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/gsn/externalFile/interfaces/IRelayRecipient.sol\":\"IRelayRecipient\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/gsn/externalFile/interfaces/IRelayRecipient.sol\":{\"keccak256\":\"0x6243d3a925653ed0bde57e9fae7fb87f12c58a2376b27ae23b53502322532e00\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://928801ac8ceac377f326cd48de8e0056db9a7f8767b60efee5dfca035f326702\",\"dweb:/ipfs/QmYFkKXZcSVmmLNpDF1hvsLwAnhjmVSZuvEueaJgp1aVSg\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "// SPDX-License-Identifier: GPL-3.0-only\npragma solidity >=0.7.6;\n\n/**\n * a contract must implement this interface in order to support relayed transaction.\n * It is better to inherit the BaseRelayRecipient as its implementation.\n */\nabstract contract IRelayRecipient {\n\n    /**\n     * return if the forwarder is trusted to forward relayed transactions to us.\n     * the forwarder is required to verify the sender's signature, and verify\n     * the call is not a replay.\n     */\n    function isTrustedForwarder(address forwarder) public virtual view returns(bool);\n\n    /**\n     * return the sender of this call.\n     * if the call came through our trusted forwarder, then the real sender is appended as the last 20 bytes\n     * of the msg.data.\n     * otherwise, return `msg.sender`\n     * should be used in the contract anywhere instead of msg.sender\n     */\n    function _msgSender() internal virtual view returns (address payable);\n\n    /**\n     * return the msg.data of this call.\n     * if the call came through our trusted forwarder, then the real sender was appended as the last 20 bytes\n     * of the msg.data - so this method will strip those 20 bytes off.\n     * otherwise (if the call was made directly and not through the forwarder), return `msg.data`\n     * should be used in the contract instead of msg.data, where this difference matters.\n     */\n    function _msgData() internal virtual view returns (bytes memory);\n\n    function versionRecipient() external virtual view returns (string memory);\n}\n",
  "sourcePath": "/home/ali/Desktop/treejer/contract/contracts/gsn/externalFile/interfaces/IRelayRecipient.sol",
  "ast": {
    "absolutePath": "project:/contracts/gsn/externalFile/interfaces/IRelayRecipient.sol",
    "exportedSymbols": {
      "IRelayRecipient": [
        5248
      ]
    },
    "id": 5249,
    "license": "GPL-3.0-only",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 5221,
        "literals": [
          "solidity",
          ">=",
          "0.7",
          ".6"
        ],
        "nodeType": "PragmaDirective",
        "src": "41:24:29"
      },
      {
        "abstract": true,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 5222,
          "nodeType": "StructuredDocumentation",
          "src": "67:165:29",
          "text": " a contract must implement this interface in order to support relayed transaction.\n It is better to inherit the BaseRelayRecipient as its implementation."
        },
        "fullyImplemented": false,
        "id": 5248,
        "linearizedBaseContracts": [
          5248
        ],
        "name": "IRelayRecipient",
        "nameLocation": "251:15:29",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "documentation": {
              "id": 5223,
              "nodeType": "StructuredDocumentation",
              "src": "274:203:29",
              "text": " return if the forwarder is trusted to forward relayed transactions to us.\n the forwarder is required to verify the sender's signature, and verify\n the call is not a replay."
            },
            "functionSelector": "572b6c05",
            "id": 5230,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "isTrustedForwarder",
            "nameLocation": "491:18:29",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5226,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5225,
                  "mutability": "mutable",
                  "name": "forwarder",
                  "nameLocation": "518:9:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 5230,
                  "src": "510:17:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5224,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "510:7:29",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "509:19:29"
            },
            "returnParameters": {
              "id": 5229,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5228,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5230,
                  "src": "557:4:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 5227,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "557:4:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "556:6:29"
            },
            "scope": 5248,
            "src": "482:81:29",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "documentation": {
              "id": 5231,
              "nodeType": "StructuredDocumentation",
              "src": "569:290:29",
              "text": " return the sender of this call.\n if the call came through our trusted forwarder, then the real sender is appended as the last 20 bytes\n of the msg.data.\n otherwise, return `msg.sender`\n should be used in the contract anywhere instead of msg.sender"
            },
            "id": 5236,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "_msgSender",
            "nameLocation": "873:10:29",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5232,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "883:2:29"
            },
            "returnParameters": {
              "id": 5235,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5234,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5236,
                  "src": "917:15:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 5233,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "917:15:29",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "916:17:29"
            },
            "scope": 5248,
            "src": "864:70:29",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "documentation": {
              "id": 5237,
              "nodeType": "StructuredDocumentation",
              "src": "940:421:29",
              "text": " return the msg.data of this call.\n if the call came through our trusted forwarder, then the real sender was appended as the last 20 bytes\n of the msg.data - so this method will strip those 20 bytes off.\n otherwise (if the call was made directly and not through the forwarder), return `msg.data`\n should be used in the contract instead of msg.data, where this difference matters."
            },
            "id": 5242,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "_msgData",
            "nameLocation": "1375:8:29",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5238,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1383:2:29"
            },
            "returnParameters": {
              "id": 5241,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5240,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5242,
                  "src": "1417:12:29",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 5239,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1417:5:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1416:14:29"
            },
            "scope": 5248,
            "src": "1366:65:29",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "functionSelector": "486ff0cd",
            "id": 5247,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "versionRecipient",
            "nameLocation": "1446:16:29",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5243,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1462:2:29"
            },
            "returnParameters": {
              "id": 5246,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5245,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5247,
                  "src": "1496:13:29",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 5244,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1496:6:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1495:15:29"
            },
            "scope": 5248,
            "src": "1437:74:29",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "external"
          }
        ],
        "scope": 5249,
        "src": "233:1280:29",
        "usedErrors": []
      }
    ],
    "src": "41:1473:29"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/gsn/externalFile/interfaces/IRelayRecipient.sol",
    "exportedSymbols": {
      "IRelayRecipient": [
        5248
      ]
    },
    "id": 5249,
    "license": "GPL-3.0-only",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 5221,
        "literals": [
          "solidity",
          ">=",
          "0.7",
          ".6"
        ],
        "nodeType": "PragmaDirective",
        "src": "41:24:29"
      },
      {
        "abstract": true,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 5222,
          "nodeType": "StructuredDocumentation",
          "src": "67:165:29",
          "text": " a contract must implement this interface in order to support relayed transaction.\n It is better to inherit the BaseRelayRecipient as its implementation."
        },
        "fullyImplemented": false,
        "id": 5248,
        "linearizedBaseContracts": [
          5248
        ],
        "name": "IRelayRecipient",
        "nameLocation": "251:15:29",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "documentation": {
              "id": 5223,
              "nodeType": "StructuredDocumentation",
              "src": "274:203:29",
              "text": " return if the forwarder is trusted to forward relayed transactions to us.\n the forwarder is required to verify the sender's signature, and verify\n the call is not a replay."
            },
            "functionSelector": "572b6c05",
            "id": 5230,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "isTrustedForwarder",
            "nameLocation": "491:18:29",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5226,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5225,
                  "mutability": "mutable",
                  "name": "forwarder",
                  "nameLocation": "518:9:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 5230,
                  "src": "510:17:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5224,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "510:7:29",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "509:19:29"
            },
            "returnParameters": {
              "id": 5229,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5228,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5230,
                  "src": "557:4:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 5227,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "557:4:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "556:6:29"
            },
            "scope": 5248,
            "src": "482:81:29",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "documentation": {
              "id": 5231,
              "nodeType": "StructuredDocumentation",
              "src": "569:290:29",
              "text": " return the sender of this call.\n if the call came through our trusted forwarder, then the real sender is appended as the last 20 bytes\n of the msg.data.\n otherwise, return `msg.sender`\n should be used in the contract anywhere instead of msg.sender"
            },
            "id": 5236,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "_msgSender",
            "nameLocation": "873:10:29",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5232,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "883:2:29"
            },
            "returnParameters": {
              "id": 5235,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5234,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5236,
                  "src": "917:15:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 5233,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "917:15:29",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "916:17:29"
            },
            "scope": 5248,
            "src": "864:70:29",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "documentation": {
              "id": 5237,
              "nodeType": "StructuredDocumentation",
              "src": "940:421:29",
              "text": " return the msg.data of this call.\n if the call came through our trusted forwarder, then the real sender was appended as the last 20 bytes\n of the msg.data - so this method will strip those 20 bytes off.\n otherwise (if the call was made directly and not through the forwarder), return `msg.data`\n should be used in the contract instead of msg.data, where this difference matters."
            },
            "id": 5242,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "_msgData",
            "nameLocation": "1375:8:29",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5238,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1383:2:29"
            },
            "returnParameters": {
              "id": 5241,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5240,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5242,
                  "src": "1417:12:29",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 5239,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1417:5:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1416:14:29"
            },
            "scope": 5248,
            "src": "1366:65:29",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "functionSelector": "486ff0cd",
            "id": 5247,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "versionRecipient",
            "nameLocation": "1446:16:29",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5243,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1462:2:29"
            },
            "returnParameters": {
              "id": 5246,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5245,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5247,
                  "src": "1496:13:29",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 5244,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1496:6:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1495:15:29"
            },
            "scope": 5248,
            "src": "1437:74:29",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "external"
          }
        ],
        "scope": 5249,
        "src": "233:1280:29",
        "usedErrors": []
      }
    ],
    "src": "41:1473:29"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.6+commit.11564f7e.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.1",
  "updatedAt": "2021-08-02T04:48:02.087Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "isTrustedForwarder(address)": {
        "notice": "return if the forwarder is trusted to forward relayed transactions to us. the forwarder is required to verify the sender's signature, and verify the call is not a replay."
      }
    },
    "notice": "a contract must implement this interface in order to support relayed transaction. It is better to inherit the BaseRelayRecipient as its implementation.",
    "version": 1
  }
}